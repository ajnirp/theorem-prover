
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b'\xff\xbd5\xc4=\x98\x069\xc5q\xf6\xf7\x99\xa4\xe1G'
    
_lr_action_items = {'VARIABLE':([0,2,5,],[3,3,3,]),'IMPLIES':([1,3,4,6,7,8,],[5,-1,-2,5,5,-4,]),'LPAREN':([0,2,5,],[2,2,2,]),'$end':([1,3,4,7,8,],[0,-1,-2,-3,-4,]),'RPAREN':([3,4,6,7,8,],[-1,-2,8,-3,-4,]),'FALSE':([0,2,5,],[4,4,4,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,5,],[1,6,7,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','prover.py',54),
  ('expression -> FALSE','expression',1,'p_expression_false','prover.py',59),
  ('expression -> expression IMPLIES expression','expression',3,'p_expression_implication','prover.py',64),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthetization','prover.py',69),
]
